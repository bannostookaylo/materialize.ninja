@import url( "https://fonts.googleapis.com/css?family=Roboto" );
@import url( "https://fonts.googleapis.com/icon?family=Material+Icons" );

:root {
	--m-accent: 30, 136, 229;
}


material {
    display: block;
    margin: 10px 0;
	font-size: 1em;
	position: relative;
	font-family: 'Roboto', sans-serif;
}

material,
material:focus,
material *,
material *:focus {
	outline: none;
	-webkit-tap-highlight-color: transparent;
	-webkit-touch-callout: none;
}

/**
 * LABELS
 */
material label{
    display: block;
    position: relative;
    height: 1em;
}
material label span{
    transition: .1s all linear;
    margin-top: 1em;
    position: absolute;
    white-space: nowrap;
}
material.focus label span,
material.active label span {
    margin-top: 0;
    font-size: 0.8em;
}

/**
 * MESSAGES
 */
material messages {
    position: absolute;
    display: flex;
    flex-direction: column;
    font-size: 0.7em;
}
material messages message.error {
    color: #F44336;
}

/**
 * Text Input Styles
 */
material[ text ] {
	cursor: text;	
}
material[ text ] *{
    cursor: text;
}
material[ text ] input {
	font-size: 1em;
	background: none;
	border-width: 0 0 1px 0;
	border-bottom-color: #000;
	width: 100%;
}

/**
 * Select Field
 */
material[ select ] {
	cursor: pointer;
}
material[ select ] * {
    cursor: pointer;
}
material[ select ] label {
}
material[ select ] label span {
}
material[ select ] select {
	position: absolute;
    z-index: -5;
    left: -5000px;
	font-size: 1em;
}
material[ select ] element {
    border-bottom: 1px solid #000;
    display: flex;
	flex-direction: row-reverse;
    height: auto;
	min-height: 1em;
    padding: 2px 0px;
}
material[ select ] element values {
    display: flex;
    flex-direction: row;
	flex-wrap: wrap;
    width: 100%;
}
material[ select ] element arrow {
    padding: 0 0.1em;
	line-height: 0.8em;
}
material[ select ] options {
	display: flex;
    flex-direction: column;
    background: #FFF;
    z-index: 8;
    position: absolute;
    top: 1.4em;
	left: 0;
	right: 0;
    height: 0em;
    overflow: scroll;
	box-shadow: 0 2px 5px rgba(0, 0, 0, 0.35);
	transition: all 0.08s ease-in-out;
}
material[ select ].focus options {
	height: auto;
	max-height: 13.3em
}
material[ select ] options option {
	padding: 0.75em;
}
material[ select ] options option.active {
	background-color: rgba(0,0,0,0.06);
	outline: none;
}

/**
 * Radio Buttons
 */
material[ radio ] {
	display: inline-block;
}
material[ radio ],
material[ radio ] * {
	user-select: none;
}
material[radio] > input {
	/**
	 * Doing display: none; cause the focus even not to fire
	 */
	filter: opacity(0);
    position: absolute;
}
material[radio] > label {
	cursor: pointer;
    height: auto;
    padding-left: 1.2em;
    display: flex;
    align-items: center;
}
material[radio] > label:before, 
material[radio] > label:after {
	position: absolute;
	content: '';
	border-radius: 50%;
	transition: 0.2s cubic-bezier(0.35, 0.9, 0.4, 0.9);
	transition-property: transform, opacity, box-shadow;
}
material[radio] > label:before {
	width: 0.8em;
    height: 0.8em;
    border: 0.1em solid rgba(0, 0, 0, 0.54);
	box-shadow: 0px 0px 0px 0rem rgba( var( --m-accent ), 0.2 );
    left: 0;
}
material[radio] > input:checked + label:before {
    border-color: rgba( var( --m-accent ), 1 );
}
material[radio] > label:after {
	width: 0.8em;
    height: 0.8em;
    background: rgba( var( --m-accent ), 1 );
    left: 0;
    border: 0.1em solid transparent;
    transform: scale( 0 );
}
material[radio].focus > label:after,
material[radio]:hover > label:after {
	transform: scale( 2 );
    background: rgba( var( --m-accent ), 0.2 );
}
material[radio] > input:checked + label:after {
    transform: scale( 0.5 );
}
material[radio].focus > input:checked + label:before,
material[radio]:hover > input:checked + label:before {
    box-shadow: 0px 0px 0px 0.5rem rgba( var( --m-accent ), 0.2 );
}
material[radio].focus > input:checked + label:after,
material[radio]:hover > input:checked + label:after {
    background: rgba( var( --m-accent ), 1 );
}
